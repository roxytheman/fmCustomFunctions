// PASSWORD STRENGTH

// This function evaluates the strength of a password based  
// on various characteristics and assigns a strength level 
// (“Weak,” “Medium,” “Strong,” or “Very Strong”).

// Function Name : passwordStrength
// Parameters : password
// Use example : passwordStrength ( "x7GAgagMPQqMfF3pCdVzs" )

Let ( [

		~password = password ;
		~length = Length ( ~password ) * 4 ;
		~num = Length ( Filter ( ~password ; "0123456789" ) ) * 3 ;
		~cap = Length ( Filter ( ~password ; "ABCDEFGHIJKLMNOPQRSTUVWXYZ" ) ) * 2;
		~low = Length ( Filter ( ~password ; "abcdefghijklmnopqrstuvwxyz" ) ) * 1 ;
		~sym = Length ( Filter ( ~password ; "!@£$%^&*()_-=?[]{}\|§±`~<>ß.,:;'" ) ) * 6 ;
		~score = ~length + ~num + ~cap + ~low + ~sym

	] ; 

	Case ( 

		~score ≥ 130 ; "Very Strong" ;
		~score ≥ 70 ; "Strong" ;
		~score ≥ 50 ; "Medium" ;
		~score < 50 ; "Weak"
		
	) 

)

// This function evaluates how strong a password is based on its length and the variety of characters it contains, 
// such as numbers, uppercase letters, lowercase letters, and special symbols. Each type of character contributes to a total score, 
// with longer passwords and more diverse characters earning higher points. Based on the score, the password is rated as 
// “Weak,” “Medium,” “Strong,” or “Very Strong.” It’s a quick way to check if a password is secure enough.

// GitHub : https://github.com/roxytheman/fmCustomFunctions/blob/108acf2d7ea0d5767229b90d28d74bf1d5771f4c/functions/passwordStrength.fmfn
// BD Link : https://www.briandunning.com/cf/2787
// Written by: jonni@me.com
// V 1.0
